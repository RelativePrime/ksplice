prefix = @prefix@
datarootdir = @datarootdir@
datadir = @datadir@

ksplice-script = $(datadir)/ksplice/ksplice-obj.pl

ifneq ($(KSPLICE_STANDALONE),)
    KSPLICE_CFLAGS += -DKSPLICE_STANDALONE
endif

ifeq ($(KSPLICE_KID),)
    $(error "You must set KSPLICE_KID.")
endif

ifeq ($(KSPLICE_MODULES),)
    $(error "You must set KSPLICE_MODULES.")
endif

ifeq ($(KSPLICE_VERSION),)
    $(error "You must set KSPLICE_VERSION.")
endif

ifeq ($(map_printk),)
    $(error "You must set map_printk.")
endif

comma ?= ,
name-fix ?= $(subst $(comma),_,$(subst -,_,$(1)))
target = $(call name-fix,$(mod))
KSPLICE_ID = $(KSPLICE_KID)_$(target)
KSPLICE = ksplice-$(KSPLICE_ID)

quiet_cmd_ksplice-collect = COLLECT $@
cmd_ksplice-collect = ld --script=$(src)/ld-script -r -o $@ $<

ksplice-pack-cflags = $(KSPLICE_CFLAGS) \
	"-DKSPLICE_ID=$(KSPLICE_ID)" \
	$(addprefix -DKSPLICE_TARGET=,$(filter-out vmlinux,$(target))) \
	"-DKSPLICE_VERSION=\"$(KSPLICE_VERSION)\"" \
	"-DMAP_PRINTK=0x$(map_printk)L"

ksplice-primary-objs = primary-$(target).o collect-primary-$(mod).o
ifneq ($(KSPLICE_STANDALONE),)
    ksplice-primary-objs += ksplice-rmsyms.o
endif
ksplice-helper-objs = helper-$(target).o collect-helper-$(mod).o

define ksplice-pack-vars
obj-m += $(KSPLICE).o $(KSPLICE)-helper.o
$(KSPLICE)-objs = $(ksplice-primary-objs)
$(KSPLICE)-helper-objs = $(ksplice-helper-objs)
CFLAGS_primary-$(target).o = $(ksplice-pack-cflags)
CFLAGS_helper-$(target).o = $(ksplice-pack-cflags)
endef

$(foreach mod,$(KSPLICE_MODULES),$(eval $(ksplice-pack-vars)))

$(foreach mod,$(KSPLICE_MODULES),$(obj)/primary-$(target).o): $(obj)/%.o: $(src)/primary.c FORCE
	$(call if_changed_rule,cc_o_c)
$(foreach mod,$(KSPLICE_MODULES),$(obj)/helper-$(target).o): $(obj)/%.o: $(src)/helper.c FORCE
	$(call if_changed_rule,cc_o_c)

$(obj)/collect-primary-%.o: $(obj)/%.o.KSPLICE_primary FORCE
	$(call if_changed,ksplice-collect)
$(obj)/collect-helper-%.o: $(obj)/%.o.KSPLICE_helper FORCE
	$(call if_changed,ksplice-collect)

ifneq ($(KSPLICE_STANDALONE),)
CFLAGS_ksplice.o += $(KSPLICE_CFLAGS)
extra-y = ksplice.o

RMSYMS = \
	apply_paravirt \
	thread_return \
	bust_spinlocks \
	task_curr \
	__kernel_text_address \
	tasklist_lock \
	stop_machine_run \
	module_mutex \
	modules \
	init_mm \
	kallsyms_addresses \
	kallsyms_num_syms \
	kallsyms_names \
	kallsyms_token_table \
	kallsyms_token_index \
	module_text_address \
	lookup_address

quiet_cmd_ksplice-rmsyms = RMSYMS  $@
cmd_ksplice-rmsyms = \
	$(ksplice-script) rmsyms $< $(RMSYMS); \
	ld -r -o $@ $< $(src)/ksplice.lds
$(obj)/ksplice-rmsyms.o: $(obj)/ksplice.o FORCE
	$(call if_changed,ksplice-rmsyms)
endif # KSPLICE_STANDALONE
